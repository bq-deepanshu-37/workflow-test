name: workflow path based test

on: workflow_dispatch

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    # For pull requests it's not necessary to checkout the code


      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
          base:  ${{ github.ref_name }}

      - name: Get Branch for Push
        if: ${{ github.event_name == 'push' }}
        run: echo "Push branch is ${{ github.ref_name }}"

  # JOB to build and test backend code
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code      
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          - name: Create Pull Request
          uses: peter-evans/create-pull-request@v7
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            commit-message: "Automated updates"
            title: "Automated updates from ${{ github.ref_name }}"
            body: "This PR was created automatically by a workflow"
            branch: "auto-update-${{ github.ref_name }}"  # Dynamic branch name based on source branch
            base: main  # The branch into which you want the PR to be merged
            author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
            labels: ["automated-pr"]
            # Set `branch` to a unique name to ensure a new PR is created every time
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: update changelog
          title: Update Changelog
          body: Update changelog to reflect release changes
          base: main


  # JOB to build and test frontend code
  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4